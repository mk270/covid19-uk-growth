#!/usr/bin/env python3

import argparse
import datetime
import database
import sys
import logging
import os
import api_client

iso_date_fmt = "%Y-%m-%d"

def today_iso(days_ago):
    then = datetime.datetime.now() - datetime.timedelta(days_ago)
    return then.strftime(iso_date_fmt)

def run():
    parser = argparse.ArgumentParser()
    parser.add_argument('--debug', action='store_true', required=False,
                    help='set logging level to INFO')
    parser.add_argument('--days-ago', action='store', type=int,
                        default=0,
                        help='set date offset')

    args = parser.parse_args()
    if args.debug or ("DEBUG" in os.environ):
        logging.getLogger().setLevel(20)

    if database.already_done_today(today_iso(args.days_ago)):
        logging.warning("Data already obtained for the day requested")
        sys.exit(0)

    try:
        day, count, tested = api_client.lookup_cases_and_tested(args.days_ago)
    except api_client.DateNotFound:
        logging.error("Data not (yet) available for date requested")
        sys.exit(1)

    print(day, count, tested)

    # date_diff = (datetime.datetime.now() - day).days
    # day_formatted = datetime.datetime.strftime(day, iso_date_fmt)

    database.save_update(day, count, tested)

if __name__ == '__main__':
   run()
